// Generated by CoffeeScript 1.9.0
(function() {
  var $IFRAME_INDEX, TRANSITION, changeSlide, disableIframe, enableIframe;

  TRANSITION = 300;

  $IFRAME_INDEX = {};

  disableIframe = function(iframe) {
    var src;
    if ($(iframe).data('src')) {
      return;
    }
    src = $(iframe).attr('src');
    $(iframe).data('src', src);
    iframe.onload = null;
    return iframe.src = 'about:blank';
  };

  enableIframe = function(iframe) {
    var src;
    src = $(iframe).data('src');
    if (!src) {
      return;
    }
    iframe.src = src;
    return $(iframe).data('src', null);
  };

  changeSlide = function(e, from, to) {
    var $parents, $slide, $subslide;
    $subslide = $.deck('getSlide', to);
    $parents = $subslide.parents('.slide');
    $slide = $parents.length ? $parents : $subslide;
    $slide.find('video').each(function() {
      return this.play();
    });
    $slide.find('iframe').each(function() {
      if (!$(this).hasClass('autoplay')) {
        return;
      }
      if (!/youtube\.com/.test($(this).attr('src'))) {
        return;
      }
      return this.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
    });
    setTimeout((function() {
      $.deck('getSlide', from).find('video').each(function() {
        return this.pause();
      });
      return $.deck('getSlide', from).find('iframe').each(function() {
        if (!/youtube\.com/.test($(this).attr('src'))) {
          return;
        }
        return this.contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}', '*');
      });
    }), TRANSITION);
    $IFRAME_INDEX[to].forEach(function(iframe) {
      return setTimeout((function() {
        return enableIframe(iframe);
      }), TRANSITION);
    });
    return $('iframe').not($IFRAME_INDEX[to]).each(function() {
      var iframe;
      iframe = this;
      return setTimeout((function() {
        return disableIframe(iframe);
      }), TRANSITION);
    });
  };

  $(function() {
    $('.slide').each(function(i) {
      var $parents, $this;
      $this = $(this);
      $parents = $this.parents('.slide');
      if ($parents.length) {
        $this = $parents;
      }
      return [i - 1, i, i + 1].forEach(function(i) {
        $IFRAME_INDEX[i] || ($IFRAME_INDEX[i] = []);
        return $this.find('iframe').each(function() {
          return $IFRAME_INDEX[i].push(this);
        });
      });
    });
    $('iframe').each(function() {
      return disableIframe(this);
    });
    return $(document).bind('deck.change', changeSlide);
  });

}).call(this);
