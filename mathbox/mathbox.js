// Generated by CoffeeScript 1.9.0
(function() {
  var clocks, loadThree, render, speed, target, ticker;

  clocks = {};

  ticker = 0;

  target = 1;

  speed = 1;

  render = function() {
    var temp;
    temp = 1;
    window.requestAnimationFrame(render);
    if (mb.mathbox) {
      temp = temp + (target - temp) * .3;
      speed = speed + (temp - speed) * .3;
      mb.mathbox.speed(speed);
      return ticker += (1000 / 60) * speed;
    }
  };

  window.mb = {
    setup: function() {},
    options: {},
    script: [],
    mathbox: null,
    director: null,
    clock: function(id) {
      if (!clocks[id]) {
        clocks[id] = ticker;
      }
      return (ticker - clocks[id]) * 0.001;
    }
  };

  loadThree = function() {
    var k, opts, v, _i, _len, _ref;
    opts = {
      cameraControls: true,
      stats: false,
      scale: 1,
      orbit: 3.5,
      theta: 0
    };
    _ref = mb.options || {};
    for (v = _i = 0, _len = _ref.length; _i < _len; v = ++_i) {
      k = _ref[v];
      opts[k] = v;
    }
    mb.mathbox = mathBox(opts).start();
    mb.mathbox.transition(300);
    mb.director = new MathBox.Director(mb.mathbox, mb.script || []);
    if (mb.setup) {
      mb.setup(mb.mathbox, mb.director);
    }
    window.addEventListener('keydown', function(e) {
      if (e.keyCode === 38 || e.keyCode === 37) {
        mb.director.back();
      }
      if (e.keyCode === 40 || e.keyCode === 39) {
        return mb.director.forward();
      }
    });
    return window.addEventListener('message', function(e) {
      if (e.data.mbgo) {
        mb.director.go.apply(mb.director, [e.data.mbgo]);
      }
      if (e.data.mbspeed) {
        return target = e.data.mbspeed;
      }
    });
  };

  $(function() {
    var match, preload, url;
    window.requestAnimationFrame(render);
    url = location.hash;
    match = url.match(/^#(.+)$/);
    preload = ['../local/mathbox.js/shaders/snippets.glsl.html', '../local/threertt.js/build/ThreeRTT.glsl.html', '../local/threertt.js/shaders/examples.glsl.html'];
    if (match) {
      preload.push('mb-' + match[1] + '.html');
    }
    return ThreeBox.preload(preload, loadThree, false);
  });

}).call(this);
